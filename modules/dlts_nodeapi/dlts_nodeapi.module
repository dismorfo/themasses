<?php
/**
 * dlts_nodeapi.module
 *
 * @package default
 */



function dlts_nodeapi_menu() {

	$items['content/%/nodeid'] = array(
		'title' => 'Experimenting with node loading',
		'page callback' => 'return_nodeid_json',
		'page arguments' => array(1),
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,

	);

	$items['content/%/page_nodeids'] = array(
		'title' => 'Return page nodeids for book',
		'page callback' => 'return_page_nodeids_json',
		'page arguments' => array(1),
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
	);

	return $items;
}




function return_nodeid_json($dlts_id)
{
	$query = new EntityFieldQuery();
//	$query->entityCondition('entity_type', 'node', '=');
 	$query->entityCondition('entity_type', 'node', '=')->fieldCondition('field_identifier', 'value', $dlts_id, '=');
 	$result = $query->execute();
	$nodeids = array();
	if (isset($result['node']))
	{
		foreach ($result['node'] as $node)
		{
			$nodeids[] = $node->nid;
		}
	}
	echo drupal_json_encode($nodeids);	
	die;
}


function return_page_nodeids_json($dlts_id)
{
	$page_types = array('dlts_book_page', 'dlts_book_stitched_page');
	$query = new EntityFieldQuery();
 	$query->entityCondition('entity_type', 'node')
		->propertyCondition('type', $page_types, 'IN')
		->fieldCondition('field_is_part_of', 'value', $dlts_id, '=');
 	$result = $query->execute();

	$nodeids = array();

	if (isset($result['node']))
	{
		// dpm($result['node']);
		$nodes = node_load_multiple(array_keys($result['node']));

		foreach ($nodes as $node)
		{
			// dpm($node);
			if ($node->type == 'dlts_book_page')
			{
				$sequence_number = field_get_items('node',
					$node, 'field_sequence_number');
				$key = $sequence_number[0]['value'];
			} else {
				$left_seqnum_value = field_get_items('node',
					$node, 'field_sequence_number_left');
				$right_seqnum_value = field_get_items('node',
					$node, 'field_sequence_number_right');
				$key = $left_seqnum_value[0]['value'] . "-" . $right_seqnum_value[0]['value'];
			}
			$nodeids[$key] = $node->nid;
		}
	}

	drupal_json_output((object) $nodeids);	
	exit;
}


// vim: set ft=php ts=4:
?>
