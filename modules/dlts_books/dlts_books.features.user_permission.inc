<?php
/**
 * @file
 * dlts_books.features.user_permission.inc
 */

/**
 * Implements hook_user_default_permissions().
 */
function dlts_books_user_default_permissions() {
  $permissions = array();

  // Exported permission: access administration pages.
  $permissions['access administration pages'] = array(
    'name' => 'access administration pages',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'system',
  );

  // Exported permission: access all views.
  $permissions['access all views'] = array(
    'name' => 'access all views',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'views',
  );

  // Exported permission: access comments.
  $permissions['access comments'] = array(
    'name' => 'access comments',
    'roles' => array(
      0 => 'administrator',
      1 => 'anonymous user',
      2 => 'authenticated user',
      3 => 'collection curator',
    ),
    'module' => 'comment',
  );

  // Exported permission: access content.
  $permissions['access content'] = array(
    'name' => 'access content',
    'roles' => array(
      0 => 'administrator',
      1 => 'anonymous user',
      2 => 'authenticated user',
      3 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: access content overview.
  $permissions['access content overview'] = array(
    'name' => 'access content overview',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: access contextual links.
  $permissions['access contextual links'] = array(
    'name' => 'access contextual links',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'contextual',
  );

  // Exported permission: access dashboard.
  $permissions['access dashboard'] = array(
    'name' => 'access dashboard',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'dashboard',
  );

  // Exported permission: access dlts site metadata.
  $permissions['access dlts site metadata'] = array(
    'name' => 'access dlts site metadata',
    'roles' => array(
      0 => 'administrator',
      1 => 'anonymous user',
      2 => 'authenticated user',
      3 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata bypass.
  $permissions['access dlts site metadata bypass'] = array(
    'name' => 'access dlts site metadata bypass',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata collection_abstract.
  $permissions['access dlts site metadata collection_abstract'] = array(
    'name' => 'access dlts site metadata collection_abstract',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata collection_call_number.
  $permissions['access dlts site metadata collection_call_number'] = array(
    'name' => 'access dlts site metadata collection_call_number',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata collection_code.
  $permissions['access dlts site metadata collection_code'] = array(
    'name' => 'access dlts site metadata collection_code',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata collection_creator.
  $permissions['access dlts site metadata collection_creator'] = array(
    'name' => 'access dlts site metadata collection_creator',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata collection_id.
  $permissions['access dlts site metadata collection_id'] = array(
    'name' => 'access dlts site metadata collection_id',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata collection_title.
  $permissions['access dlts site metadata collection_title'] = array(
    'name' => 'access dlts site metadata collection_title',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata collection_type.
  $permissions['access dlts site metadata collection_type'] = array(
    'name' => 'access dlts site metadata collection_type',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata partner_code.
  $permissions['access dlts site metadata partner_code'] = array(
    'name' => 'access dlts site metadata partner_code',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access dlts site metadata partner_name.
  $permissions['access dlts site metadata partner_name'] = array(
    'name' => 'access dlts site metadata partner_name',
    'roles' => array(
      0 => 'anonymous user',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'dlts_site_metadata',
  );

  // Exported permission: access site in maintenance mode.
  $permissions['access site in maintenance mode'] = array(
    'name' => 'access site in maintenance mode',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'system',
  );

  // Exported permission: access site reports.
  $permissions['access site reports'] = array(
    'name' => 'access site reports',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'system',
  );

  // Exported permission: access toolbar.
  $permissions['access toolbar'] = array(
    'name' => 'access toolbar',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'toolbar',
  );

  // Exported permission: access user profiles.
  $permissions['access user profiles'] = array(
    'name' => 'access user profiles',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'user',
  );

  // Exported permission: administer actions.
  $permissions['administer actions'] = array(
    'name' => 'administer actions',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'system',
  );

  // Exported permission: administer blocks.
  $permissions['administer blocks'] = array(
    'name' => 'administer blocks',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'block',
  );

  // Exported permission: administer comments.
  $permissions['administer comments'] = array(
    'name' => 'administer comments',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'comment',
  );

  // Exported permission: administer content types.
  $permissions['administer content types'] = array(
    'name' => 'administer content types',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: administer dlts.
  $permissions['administer dlts'] = array(
    'name' => 'administer dlts',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'dlts_image',
  );

  // Exported permission: administer dlts utilities.
  $permissions['administer dlts utilities'] = array(
    'name' => 'administer dlts utilities',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'dlts_utilities',
  );

  // Exported permission: administer facets.
  $permissions['administer facets'] = array(
    'name' => 'administer facets',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'facetapi',
  );

  // Exported permission: administer features.
  $permissions['administer features'] = array(
    'name' => 'administer features',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'features',
  );

  // Exported permission: administer fieldgroups.
  $permissions['administer fieldgroups'] = array(
    'name' => 'administer fieldgroups',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'field_group',
  );

  // Exported permission: administer filters.
  $permissions['administer filters'] = array(
    'name' => 'administer filters',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'filter',
  );

  // Exported permission: administer image styles.
  $permissions['administer image styles'] = array(
    'name' => 'administer image styles',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'image',
  );

  // Exported permission: administer languages.
  $permissions['administer languages'] = array(
    'name' => 'administer languages',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'locale',
  );

  // Exported permission: administer menu.
  $permissions['administer menu'] = array(
    'name' => 'administer menu',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'menu',
  );

  // Exported permission: administer modules.
  $permissions['administer modules'] = array(
    'name' => 'administer modules',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'system',
  );

  // Exported permission: administer nodes.
  $permissions['administer nodes'] = array(
    'name' => 'administer nodes',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: administer permissions.
  $permissions['administer permissions'] = array(
    'name' => 'administer permissions',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'user',
  );

  // Exported permission: administer search.
  $permissions['administer search'] = array(
    'name' => 'administer search',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'search',
  );

  // Exported permission: administer services.
  $permissions['administer services'] = array(
    'name' => 'administer services',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'services',
  );

  // Exported permission: administer shortcuts.
  $permissions['administer shortcuts'] = array(
    'name' => 'administer shortcuts',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'shortcut',
  );

  // Exported permission: administer site configuration.
  $permissions['administer site configuration'] = array(
    'name' => 'administer site configuration',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'system',
  );

  // Exported permission: administer software updates.
  $permissions['administer software updates'] = array(
    'name' => 'administer software updates',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'system',
  );

  // Exported permission: administer taxonomy.
  $permissions['administer taxonomy'] = array(
    'name' => 'administer taxonomy',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'taxonomy',
  );

  // Exported permission: administer themes.
  $permissions['administer themes'] = array(
    'name' => 'administer themes',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'system',
  );

  // Exported permission: administer url aliases.
  $permissions['administer url aliases'] = array(
    'name' => 'administer url aliases',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'path',
  );

  // Exported permission: administer users.
  $permissions['administer users'] = array(
    'name' => 'administer users',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'user',
  );

  // Exported permission: administer views.
  $permissions['administer views'] = array(
    'name' => 'administer views',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'views',
  );

  // Exported permission: block IP addresses.
  $permissions['block IP addresses'] = array(
    'name' => 'block IP addresses',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'system',
  );

  // Exported permission: bypass node access.
  $permissions['bypass node access'] = array(
    'name' => 'bypass node access',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: cancel account.
  $permissions['cancel account'] = array(
    'name' => 'cancel account',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'user',
  );

  // Exported permission: change own username.
  $permissions['change own username'] = array(
    'name' => 'change own username',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'user',
  );

  // Exported permission: create article content.
  $permissions['create article content'] = array(
    'name' => 'create article content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: create dlts_book content.
  $permissions['create dlts_book content'] = array(
    'name' => 'create dlts_book content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: create dlts_book_page content.
  $permissions['create dlts_book_page content'] = array(
    'name' => 'create dlts_book_page content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: create dlts_book_section content.
  $permissions['create dlts_book_section content'] = array(
    'name' => 'create dlts_book_section content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: create dlts_book_stitched_page content.
  $permissions['create dlts_book_stitched_page content'] = array(
    'name' => 'create dlts_book_stitched_page content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: create page content.
  $permissions['create page content'] = array(
    'name' => 'create page content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: create url aliases.
  $permissions['create url aliases'] = array(
    'name' => 'create url aliases',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'path',
  );

  // Exported permission: customize shortcut links.
  $permissions['customize shortcut links'] = array(
    'name' => 'customize shortcut links',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'shortcut',
  );

  // Exported permission: delete any article content.
  $permissions['delete any article content'] = array(
    'name' => 'delete any article content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete any dlts_book content.
  $permissions['delete any dlts_book content'] = array(
    'name' => 'delete any dlts_book content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete any dlts_book_page content.
  $permissions['delete any dlts_book_page content'] = array(
    'name' => 'delete any dlts_book_page content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete any dlts_book_section content.
  $permissions['delete any dlts_book_section content'] = array(
    'name' => 'delete any dlts_book_section content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete any dlts_book_stitched_page content.
  $permissions['delete any dlts_book_stitched_page content'] = array(
    'name' => 'delete any dlts_book_stitched_page content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete any page content.
  $permissions['delete any page content'] = array(
    'name' => 'delete any page content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete own article content.
  $permissions['delete own article content'] = array(
    'name' => 'delete own article content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete own dlts_book content.
  $permissions['delete own dlts_book content'] = array(
    'name' => 'delete own dlts_book content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete own dlts_book_page content.
  $permissions['delete own dlts_book_page content'] = array(
    'name' => 'delete own dlts_book_page content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete own dlts_book_section content.
  $permissions['delete own dlts_book_section content'] = array(
    'name' => 'delete own dlts_book_section content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete own dlts_book_stitched_page content.
  $permissions['delete own dlts_book_stitched_page content'] = array(
    'name' => 'delete own dlts_book_stitched_page content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete own page content.
  $permissions['delete own page content'] = array(
    'name' => 'delete own page content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete revisions.
  $permissions['delete revisions'] = array(
    'name' => 'delete revisions',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: delete terms in 1.
  $permissions['delete terms in 1'] = array(
    'name' => 'delete terms in 1',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'taxonomy',
  );

  // Exported permission: edit any article content.
  $permissions['edit any article content'] = array(
    'name' => 'edit any article content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit any dlts_book content.
  $permissions['edit any dlts_book content'] = array(
    'name' => 'edit any dlts_book content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit any dlts_book_page content.
  $permissions['edit any dlts_book_page content'] = array(
    'name' => 'edit any dlts_book_page content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit any dlts_book_section content.
  $permissions['edit any dlts_book_section content'] = array(
    'name' => 'edit any dlts_book_section content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit any dlts_book_stitched_page content.
  $permissions['edit any dlts_book_stitched_page content'] = array(
    'name' => 'edit any dlts_book_stitched_page content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit any page content.
  $permissions['edit any page content'] = array(
    'name' => 'edit any page content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit own article content.
  $permissions['edit own article content'] = array(
    'name' => 'edit own article content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit own comments.
  $permissions['edit own comments'] = array(
    'name' => 'edit own comments',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'comment',
  );

  // Exported permission: edit own dlts_book content.
  $permissions['edit own dlts_book content'] = array(
    'name' => 'edit own dlts_book content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit own dlts_book_page content.
  $permissions['edit own dlts_book_page content'] = array(
    'name' => 'edit own dlts_book_page content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit own dlts_book_section content.
  $permissions['edit own dlts_book_section content'] = array(
    'name' => 'edit own dlts_book_section content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit own dlts_book_stitched_page content.
  $permissions['edit own dlts_book_stitched_page content'] = array(
    'name' => 'edit own dlts_book_stitched_page content',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit own page content.
  $permissions['edit own page content'] = array(
    'name' => 'edit own page content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: edit terms in 1.
  $permissions['edit terms in 1'] = array(
    'name' => 'edit terms in 1',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'taxonomy',
  );

  // Exported permission: get a system variable.
  $permissions['get a system variable'] = array(
    'name' => 'get a system variable',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'services',
  );

  // Exported permission: get any binary files.
  $permissions['get any binary files'] = array(
    'name' => 'get any binary files',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'services',
  );

  // Exported permission: get own binary files.
  $permissions['get own binary files'] = array(
    'name' => 'get own binary files',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'services',
  );

  // Exported permission: manage features.
  $permissions['manage features'] = array(
    'name' => 'manage features',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'features',
  );

  // Exported permission: perform unlimited index queries.
  $permissions['perform unlimited index queries'] = array(
    'name' => 'perform unlimited index queries',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'services',
  );

  // Exported permission: post comments.
  $permissions['post comments'] = array(
    'name' => 'post comments',
    'roles' => array(
      0 => 'administrator',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'comment',
  );

  // Exported permission: request book metadata.
  $permissions['request book metadata'] = array(
    'name' => 'request book metadata',
    'roles' => array(
      0 => 'administrator',
      1 => 'anonymous user',
      2 => 'authenticated user',
    ),
    'module' => 'dlts_book_api',
  );

  // Exported permission: request oembed.
  $permissions['request oembed'] = array(
    'name' => 'request oembed',
    'roles' => array(
      0 => 'administrator',
      1 => 'anonymous user',
      2 => 'authenticated user',
    ),
    'module' => 'dlts_book_api',
  );

  // Exported permission: revert revisions.
  $permissions['revert revisions'] = array(
    'name' => 'revert revisions',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: save file information.
  $permissions['save file information'] = array(
    'name' => 'save file information',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'services',
  );

  // Exported permission: search content.
  $permissions['search content'] = array(
    'name' => 'search content',
    'roles' => array(
      0 => 'administrator',
      1 => 'anonymous user',
    ),
    'module' => 'search',
  );

  // Exported permission: select account cancellation method.
  $permissions['select account cancellation method'] = array(
    'name' => 'select account cancellation method',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'user',
  );

  // Exported permission: set a system variable.
  $permissions['set a system variable'] = array(
    'name' => 'set a system variable',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'services',
  );

  // Exported permission: skip comment approval.
  $permissions['skip comment approval'] = array(
    'name' => 'skip comment approval',
    'roles' => array(
      0 => 'administrator',
      1 => 'authenticated user',
      2 => 'collection curator',
    ),
    'module' => 'comment',
  );

  // Exported permission: switch shortcut sets.
  $permissions['switch shortcut sets'] = array(
    'name' => 'switch shortcut sets',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'shortcut',
  );

  // Exported permission: translate interface.
  $permissions['translate interface'] = array(
    'name' => 'translate interface',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'locale',
  );

  // Exported permission: use advanced search.
  $permissions['use advanced search'] = array(
    'name' => 'use advanced search',
    'roles' => array(
      0 => 'administrator',
    ),
    'module' => 'search',
  );

  // Exported permission: use text format filtered_html.
  $permissions['use text format filtered_html'] = array(
    'name' => 'use text format filtered_html',
    'roles' => array(
      0 => 'administrator',
      1 => 'anonymous user',
      2 => 'authenticated user',
    ),
    'module' => 'filter',
  );

  // Exported permission: use text format full_html.
  $permissions['use text format full_html'] = array(
    'name' => 'use text format full_html',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'filter',
  );

  // Exported permission: view own unpublished content.
  $permissions['view own unpublished content'] = array(
    'name' => 'view own unpublished content',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: view revisions.
  $permissions['view revisions'] = array(
    'name' => 'view revisions',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'node',
  );

  // Exported permission: view the administration theme.
  $permissions['view the administration theme'] = array(
    'name' => 'view the administration theme',
    'roles' => array(
      0 => 'administrator',
      1 => 'collection curator',
    ),
    'module' => 'system',
  );

  return $permissions;
}
